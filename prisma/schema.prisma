// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserBadge {
  PRO
  TESTER
  DEFAULT
}

enum AuthProvider {
  DEFAULT
  DISCORD
  GITHUB
  GOOGLE
}

model User {
  id             String           @id @default(cuid())
  oauthId        String           @unique
  username       String           @unique
  description    String           @default("")
  avatar         String
  country        String           @default("")
  badge          UserBadge        @default(DEFAULT)
  keystrokes     Int              @default(0)
  testsCompleted Int              @default(0)
  wordsWritten   Int              @default(0)
  followedBy     UserOnUser[]     @relation("followedBy")
  following      UserOnUser[]     @relation("following")
  wordsPerMinute WordsPerMinute[]
  charsPerMinute CharsPerMinute[]
  accuracy       TypingAccuracy[]
  testPresets    TestPreset[]
  accessToken    String
  refreshToken   String
  authProvider   AuthProvider     @default(DEFAULT)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model UserOnUser {
  id      String @id @default(cuid())
  child   User   @relation("following", fields: [childId], references: [id])
  childId String

  parent   User   @relation("followedBy", fields: [parentId], references: [id])
  parentId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WordsPerMinute {
  id        String   @id @default(cuid())
  amount    Float    @default(0)
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CharsPerMinute {
  id        String   @id @default(cuid())
  amount    Float    @default(0)
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TypingAccuracy {
  id        String   @id @default(cuid())
  amount    Float    @default(0)
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TestType {
  WORDS
  TIME
}

enum TestLanguage {
  ENGLISH
  SPANISH
}

model TestPreset {
  id           String       @id @default(cuid())
  type         TestType     @default(WORDS)
  language     TestLanguage @default(ENGLISH)
  time         Int          @default(0)
  words        Int          @default(25)
  creatorImage String       @default("")
  user         User?        @relation(fields: [userId], references: [id])
  userId       String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}
